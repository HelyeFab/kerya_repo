rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to validate stats increment/decrement
    function isValidStatsUpdate(oldDoc, newDoc) {
      let diff = newDoc.data.savedWords - oldDoc.data.savedWords;
      let favDiff = newDoc.data.favoriteBooks - oldDoc.data.favoriteBooks;
      let booksDiff = newDoc.data.booksRead - oldDoc.data.booksRead;
      
      // Allow only +1/-1 changes or no change
      return (diff == 1 || diff == -1 || diff == 0) &&
             (favDiff == 1 || favDiff == -1 || favDiff == 0) &&
             (booksDiff == 1 || booksDiff == 0);
    }

    // Helper function to validate stats fields
    function hasValidStatsFields(doc) {
      let data = doc.data;
      return data.keys().hasAll(['booksRead', 'favoriteBooks', 'readingStreak', 'savedWords', 'lastUpdated']) &&
             data.booksRead is number &&
             data.favoriteBooks is number &&
             data.readingStreak is number &&
             data.savedWords is number &&
             data.lastUpdated is timestamp;
    }

    // Allow read access to all collections for authenticated users
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId && hasValidStatsFields(request.resource);
      allow update: if isAuthenticated() && 
                      request.auth.uid == userId && 
                      hasValidStatsFields(request.resource) &&
                      isValidStatsUpdate(resource, request.resource);
      
      // Add rules for favorites subcollection
      match /favorites/{bookId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated() && request.auth.uid == userId;
      }

      // Add rules for saved_words subcollection
      match /saved_words/{wordId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated() && request.auth.uid == userId;
      }
    }

    // Allow read access to saved_words collection for authenticated users
    match /saved_words/{wordId} {
      allow read: if isAuthenticated();
    }

    // Allow read/write access to books collection during development
    match /books/{document=**} {
      allow read, write: if true;  // TODO: Restrict this before production
    }
  }
}
